services:
  java_app:
    container_name: java_app
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - DATABASE_URL=jdbc:postgresql://java_db:5432/postgres
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
    depends_on:
      - java_db
    networks:
      - backend

  java_db:
    container_name: java_db
    image: postgres:17
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - java_db_data:/var/lib/postgresql/data
      - ./ejemplos.sql:/docker-entrypoint-initdb.d/ejemplos.sql
    networks:
      - backend

  keycloak_db:
    container_name: keycloak_db
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloakpass
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    networks:
      - backend

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.2.0
    command: start-dev
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak_db
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloakpass
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HOSTNAME=localhost
    ports:
      - "8080:8080"
    depends_on:
      - keycloak_db
    networks:
      - backend

  keycloak-config:
    image: adorsys/keycloak-config-cli:latest
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - IMPORT_PATH=/config
      - KEYCLOAK_AVAILABILITYCHECK_ENABLED=true
      - KEYCLOAK_AVAILABILITYCHECK_TIMEOUT=60s
    volumes:
      - ./keycloak-export:/config
    depends_on:
      - keycloak
    networks:
      - backend

  frontend:
    container_name: angular_app
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - backend

volumes:
  keycloak_db_data:
  java_db_data:

networks:
  backend:
